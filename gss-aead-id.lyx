#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass docbook
\use_default_options true
\maintain_unincluded_children false
\begin_local_layout
Format 31

InsetLayout Flex:PI_Strict
    LyXType Custom
    HTMLTag div
    LabelString PI_Strict
End

InsetLayout Flex:PI
    LyXType Custom
    HTMLTag div
    LabelString PI
End

InsetLayout Flex:PI_SymRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SymRefs
End

InsetLayout Flex:PI_SortRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SortRefs
End

InsetLayout Flex:PI_TOC
    LyXType Custom
    HTMLTag div
    LabelString PI_TOC
End

InsetLayout Flex:PI_TOCIndent
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCIndent
End

InsetLayout Flex:PI_TOCDepth
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCDepth
End

InsetLayout Flex:PI_TOCNarrow
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCNarrow
End

InsetLayout Flex:PI_TOCCompact
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCCompact
End

InsetLayout Flex:PI_TOCAppendix
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCAppendix
End

InsetLayout Flex:DocName
    LyXType Custom
    HTMLTag div
    LabelString DocName
End

InsetLayout Flex:IntendedStatus
    LyXType Custom
    HTMLTag div
    LabelString IntendedStatus
End

InsetLayout Flex:Updates
    LyXType Custom
    HTMLTag div
    LabelString Updates
End

InsetLayout Flex:Obsoletes
    LyXType Custom
    HTMLTag div
    LabelString Obsoletes
End

InsetLayout Flex:SeriesNo
    LyXType Custom
    HTMLTag div
    LabelString SeriesNo
End

InsetLayout Flex:RFCNumber
    LyXType Custom
    HTMLTag div
    LabelString RFCNumber
End

InsetLayout Flex:IPR
    LyXType Custom
    HTMLTag div
    LabelString IPR
End

InsetLayout Flex:IETFArea
    LyXType Custom
    HTMLTag div
    LabelString IETFArea
End

InsetLayout Flex:IETFWorkingGroup
    LyXType Custom
    HTMLTag div
    LabelString IETFWorkingGroup
End

InsetLayout Flex:XML2RFCKeyword
    LyXType Custom
    HTMLTag div
    LabelString XML2RFCKeyword
End

InsetLayout Flex:TitleAbbrev
    LyXType Custom
    HTMLTag div
    LabelString TitleAbbrev
End

InsetLayout Flex:AuthorRole
    LyXType Custom
    HTMLTag div
    LabelString AuthRole
End

InsetLayout Flex:AuthorInitials
    LyXType Custom
    HTMLTag div
    LabelString AuthInitials
End

InsetLayout Flex:AuthorSurname
    LyXType Custom
    HTMLTag div
    LabelString AuthSurname
End

InsetLayout Flex:AuthorOrg
    LyXType Custom
    HTMLTag div
    LabelString AuthOrg
End

InsetLayout Flex:AuthorOrgAbbrev
    LyXType Custom
    HTMLTag div
    LabelString AuthOrgAbbrev
End

InsetLayout Flex:AuthorEmailAddr
    LyXType Custom
    HTMLTag div
    LabelString AuthEmailAddr
End

InsetLayout Flex:AuthorAddrStreet
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrStreet
End

InsetLayout Flex:AuthorAddrCity
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCity
End

InsetLayout Flex:AuthorAddrRegion
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrRegion
End

InsetLayout Flex:AuthorAddrCode
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCode
End

InsetLayout Flex:AuthorAddrCountry
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCountry
End

InsetLayout Flex:EntityXRef
    LyXType Custom
    HTMLTag div
    LabelString EntityXRef
End

InsetLayout Flex:BibXML
    LyXType Custom
    HTMLTag div
    LabelString BibXML
End

InsetLayout Flex:EmbeddedBibXML
    LyXType Custom
    HTMLTag div
    LabelString EmbeddedBibXML
End
\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman cmr
\font_sans cmss
\font_typewriter cmtt
\font_default_family ttdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
AEAD Modes for Kerberos GSS-API
\end_layout

\begin_layout Standard
\begin_inset Flex DocName
status open

\begin_layout Plain Layout
draft-howard-gssapi-aead-00
\end_layout

\end_inset


\begin_inset Flex IPR
status open

\begin_layout Plain Layout
trust200902
\end_layout

\end_inset


\begin_inset Flex IntendedStatus
status open

\begin_layout Plain Layout
exp
\end_layout

\end_inset


\begin_inset Flex TitleAbbrev
status open

\begin_layout Plain Layout
AEAD Modes for Kerberos GSS-API
\end_layout

\end_inset


\begin_inset Flex IETFArea
status open

\begin_layout Plain Layout
Security Area
\end_layout

\end_inset


\begin_inset Flex XML2RFCKeyword
status open

\begin_layout Plain Layout
Internet-Draft
\end_layout

\end_inset


\begin_inset Flex Updates
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PI TOC
status open

\begin_layout Plain Layout
yes
\end_layout

\end_inset


\begin_inset Flex PI SymRefs
status open

\begin_layout Plain Layout
yes
\end_layout

\end_inset


\begin_inset Flex PI TOCIndent
status open

\begin_layout Plain Layout
no
\end_layout

\end_inset


\begin_inset Flex PI
status open

\begin_layout Plain Layout
comments="yes"
\end_layout

\end_inset


\begin_inset Flex PI
status open

\begin_layout Plain Layout
inline="yes"
\end_layout

\end_inset


\end_layout

\begin_layout Author
Luke Howard 
\begin_inset Flex AuthorOrg
status open

\begin_layout Plain Layout
PADL Software
\end_layout

\end_inset

 
\begin_inset Flex AuthorOrgAbbrev
status open

\begin_layout Plain Layout
PADL
\end_layout

\end_inset

 
\begin_inset Flex AuthorInitials
status open

\begin_layout Plain Layout
L.
\end_layout

\end_inset

 
\begin_inset Flex AuthorSurname
status open

\begin_layout Plain Layout
Howard
\end_layout

\end_inset

 
\begin_inset Flex AuthorAddrStreet
status open

\begin_layout Plain Layout
PO Box 59
\end_layout

\end_inset


\begin_inset Flex AuthorAddrCity
status open

\begin_layout Plain Layout
Central Park
\end_layout

\end_inset

 
\begin_inset Flex AuthorAddrRegion
status open

\begin_layout Plain Layout
VIC
\end_layout

\end_inset

 
\begin_inset Flex AuthorAddrCountry
status open

\begin_layout Plain Layout
Australia
\end_layout

\end_inset

 
\begin_inset Flex AuthorAddrCode
status open

\begin_layout Plain Layout
3145
\end_layout

\end_inset

 
\begin_inset Flex AuthorEmailAddr
status open

\begin_layout Plain Layout
lukeh@padl.com
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
This document updates 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 with support for encryption mechanisms that can authenticate associated
 data such as Counter with CBC-MAC (CCM) and Galois/Counter Mode (GCM).
 These mechanisms are often more performant and need not expand the message
 as much as conventional modes.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Introduction"

\end_inset

Introduction
\end_layout

\begin_layout Standard
This document updates 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 with support for encryption mechanisms that support Authenticated Encryption
 with Associated Data (AEAD).
 These mechanisms often have performance advantage over conventional encryption
 modes as they can be efficiently parallelized and do not expand the plaintext
 when encrypting.
\end_layout

\begin_layout Standard
In addition, this document defines new GSS-API functions for protecting
 associated data in addition to a plaintext.
\end_layout

\begin_layout Section
Requirements notation
\end_layout

\begin_layout Standard
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
 "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are
 to be interpreted as described in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC2119
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:AEAD"

\end_inset

Authenticated Encryption with Associated Data (AEAD) Overview
\end_layout

\begin_layout Standard
The Kerberos 5 GSS-API mechanism specified in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 provides for the authenticated encryption of plaintext, that is, it provides
 both for confidentiality and a way to check the for integrity and authenticity.
 
\end_layout

\begin_layout Standard
It can be useful in many applications to provide for the integrity and authentic
ity of some additional unencrypted data; this is termed Authenticated Encryption
 with Associated Data (AEAD).
 This can be done by the generic composition of existing encryption and
 checksum mechanisms, or using algorithms which specifically provide for
 AEAD (see 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC5116
\end_layout

\end_inset

).
 The latter class of algorithms, referred to as native AEAD, may have additional
 constraints (further described in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
KRB-AEAD
\end_layout

\end_inset

).
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:GSS-Updates"

\end_inset

Updates to RFC 2743
\end_layout

\begin_layout Standard
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC2743
\end_layout

\end_inset

 is updated with variations of GSS_Wrap() and GSS_Unwrap() that permit the
 inclusion of associated data to be authenticated along with a plaintext.
\end_layout

\begin_layout RevisionRemark
TBD: do we allow interleaved plaintext and associated data (which SSPI does
 and indeed requires for DCE), or do we limit it to a single octet string
 each? If the former, we need to define GSS_Wrap_IOV instead of GSS_Wrap_AEAD
 (and the Unwrap equivalents).
\end_layout

\begin_layout Subsection
GSS_Wrap_AEAD
\end_layout

\begin_layout Standard
Inputs:
\end_layout

\begin_layout Itemize
context_handle CONTEXT HANDLE,
\end_layout

\begin_layout Itemize
conf_req_flag BOOLEAN,
\end_layout

\begin_layout Itemize
qop_req INTEGER, -- 0 specifies default QOP
\end_layout

\begin_layout Itemize
input_assoc_data OCTET STRING, -- associated data
\end_layout

\begin_layout Itemize
input_message OCTET STRING -- plaintext
\end_layout

\begin_layout Standard
Outputs:
\end_layout

\begin_layout Itemize
major_status INTEGER,
\end_layout

\begin_layout Itemize
minor_status INTEGER,
\end_layout

\begin_layout Itemize
conf_state BOOLEAN,
\end_layout

\begin_layout Itemize
output_message OCTET STRING -- caller must release with GSS_Release_buffer()
\end_layout

\begin_layout Standard
Performs the data origin authentication, data integrity and (optionally)
 data confidentiality functions of GSS_Wrap(), additionally integrity protecting
 the data in input_assoc_data.
 Return values are as for GSS_Wrap().
 Note that output_message does not include the data in input_assoc_data.
\end_layout

\begin_layout Subsection
GSS_Unwrap_AEAD
\end_layout

\begin_layout Standard
Inputs:
\end_layout

\begin_layout Itemize
context_handle CONTEXT HANDLE,
\end_layout

\begin_layout Itemize
input_message OCTET STRING, -- plaintext
\end_layout

\begin_layout Itemize
input_assoc_data OCTET STRING -- associated data
\end_layout

\begin_layout Standard
Outputs:
\end_layout

\begin_layout Itemize
conf_state BOOLEAN,
\end_layout

\begin_layout Itemize
qop_state INTEGER,
\end_layout

\begin_layout Itemize
major_status INTEGER,
\end_layout

\begin_layout Itemize
minor_status INTEGER,
\end_layout

\begin_layout Itemize
output_message OCTET STRING -- caller must release with GSS_Release_buffer()
\end_layout

\begin_layout Standard
Processes a data element generated (and optionally encrypted) by GSS_Wrap(),
 provided as input_message, additionally validating the data origin and
 integrity of input_assoc_data.
 Return values are as for GSS_Unwrap().
 Note that output_message does not include the data in input_assoc_data.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Krb-Updates"

\end_inset

Updates to RFC 4121
\end_layout

\begin_layout Subsection
Support for Associated Data
\end_layout

\begin_layout Standard
The generation of per-message tokens using the GSS_Wrap_AEAD() and GSS_Unwrap_AE
AD() functions is identical to GSS_Wrap() and GSS_Unwrap(), except that:
\end_layout

\begin_layout Itemize
the encrypt-with-ad and decrypt-with-ad functions are used instead of the
 encrypt and decrypt functions (respectively)
\end_layout

\begin_layout Itemize
the input_assoc_data parameter is passed as the associated data
\end_layout

\begin_layout Itemize
the is-longterm parameter is always false
\end_layout

\begin_layout Subsection
Existing Encryption Types
\end_layout

\begin_layout Standard
For existing encryption mechanisms that use a generic composition of encryption
 and checksum functions (such as the Simplified Profile in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC3961
\end_layout

\end_inset

), the only operative difference to 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 is that the associated data is prepended to the plaintext before invoking
 the checksum function.
 As such, for these encryption types GSS_Wrap_AEAD() with no associated
 data has an identical output to GSS_Wrap().
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:AEAD-only"

\end_inset

Native AEAD Encryption Types
\end_layout

\begin_layout Standard
When used with native AEAD encryption types as defined in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
KRB-AEAD
\end_layout

\end_inset

, the generation of 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 per-message tokens is modified as described below.
\end_layout

\begin_layout Subsubsection
Restriction on Native AEAD Usage
\end_layout

\begin_layout Standard
Implementations SHALL NOT use native AEAD encryption types where the determinist
ic cipherstate length is less than 12 octets (96 bytes).
\end_layout

\begin_layout RevisionRemark
TBD: if we want to support CCM with a 32-bit counter, we could remove the
 Filler byte and reduce the required cipherstate length to 11 octets.
 However, this may make it more difficult to use TLS-oriented GCM implementation
s that expose the Fixed-Common and Fixed-Distinct nonce components independently.
\end_layout

\begin_layout Standard
Native AEAD encryption types that do not support long-term keys SHOULD only
 be negotiated for use in GSS-API using the cryptosystem negotiation extension
 defined in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4537
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Application-provided Cipherstate
\end_layout

\begin_layout Standard
The cipherstate for each invocation of encrypt-with-ad or decrypt-with-ad
 is given as follows.
 (For consistency with 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 the following definition uses 0-based indexing.)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Octet no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0..1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TOK_ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Identification field, per 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 Section 4.2.6 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Flags
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes field, per 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 Section 4.2.6 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Filler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
One octet of the hex value FF
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4..11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SND_SEQ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sequence number field, per 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 Section 4.2.6 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12..
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Remaining octets (if any) are set to zero
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The output cipherstate from the encrypt-with-ad and decrypt-with-ad functions
 is discarded as it is always specified explicitly as described above.
\end_layout

\begin_layout Standard
The use of application-managed cipherstate allows the per-message token
 size be reduced by omitting the confounder and encrypted copy of the token
 header.
 There is no limit on the number or size of messages that can be protected
 beyond those imposed by the sequence number size and the underlying cryptosyste
m.
\end_layout

\begin_layout Subsubsection
Encryption and Checksum Operations
\end_layout

\begin_layout Standard
This text amends 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 Section 4.2.4.
\end_layout

\begin_layout Standard
In Wrap tokens that provide for confidentiality, the first 16 octets of
 the token (the 
\begin_inset Quotes eld
\end_inset

header
\begin_inset Quotes erd
\end_inset

, as defined in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 Section 4.2.6) SHALL NOT be appended to the plaintext data before encryption.
 Instead, the TOK_ID, Flags and SND_SEQ fields of the token header are protected
 by the initialization vector (cipherstate).
 The EC field is unprotected, a change from 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

.
 The receiver MUST explicitly validate the EC field.
 For the native AEAD encryption types profiled in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
KRB-AEAD
\end_layout

\end_inset

 Section 5, EC SHALL be zero (except when GSS_C_DCE_STYLE is in use, see
 below).
 This specification does not support native AEAD encryption types that require
 the plaintext to be padded.
\end_layout

\begin_layout Standard
In Wrap tokens that do not provide for confidentiality, the first 16 octets
 of the token SHALL NOT be appended to the to-be-signed plaintext data.
 As with Wrap tokens that do provide for confidentiality, all fields except
 EC and RRC are protected by the initialization vector.
 The receiver MUST validate that EC is the correct constant value.
 For the AEAD encryption types defined in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
KRB-AEAD
\end_layout

\end_inset

 Section 5, EC SHALL be sixteen, reflecting the tag length of 16 octets
 (128 bits).
\end_layout

\begin_layout Standard
Because native AEAD encryption types lack an explicit checksum operation,
 MIC tokens are generated similarly to Wrap tokens, using the encrypt-with-ad
 function passing the to-be-signed data as the associated data and using
 a plaintext length of zero.
 The key usage and initialization vector serve to disambiguate MIC from
 Wrap tokens.
 The octet string output by the encrypt-with-ad function contains the authentica
tion tag, which is placed in the SGN_CKSUM field of the token.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:DCE"

\end_inset

DCE RPC Interoperability
\end_layout

\begin_layout Standard
Existing implementations that support the GSS_C_DCE_STYLE context flag will,
 when this flag is in set, set EC for Wrap tokens with confidentiality to
 the underlying cipher's block size and use an effective Right Rotation
 Count (RRC) of EC + RRC bytes.
 This document does not specify otherwise.
\end_layout

\begin_layout Standard
When GSS_C_DCE_STYLE is set, receivers MUST verify that the otherwise unprotecte
d EC field is the underlying cipher's block size for Wrap tokens with confidenti
ality.
 (For Wrap tokens without confidentiality, the EC field remains the length
 of the authentication tag.)
\end_layout

\begin_layout Standard
DCE interleaves plaintext and associated data; because native AEAD algorithms
 may require associated data to be processed before any plaintext, any plaintext
 and associated data must each be coalesced before encrypting or decrypting.
 This document does not specify an API for processing interleaved plaintext
 and associated data.
\end_layout

\begin_layout Section
Security Considerations
\end_layout

\begin_layout Standard
The combination of a context-specific session key and the presence of the
 the TOK_ID and SND_SEQ fields in the cipherstate guarantees that the key/IV
 combination is safe from reuse.
 The allows native AEAD modes such as 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
GCM
\end_layout

\end_inset

 and 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
CCM
\end_layout

\end_inset

 to be used securely.
\end_layout

\begin_layout Standard
Because the initialization vector has a deterministic (but non-repeating)
 construction, it is safe for use with GCM without any limitation on the
 number of invocations of the authenticated encryption function other than
 that imposed by the requirement that the cipherstate not repeat.
 (Section 8.3 of 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
GCM
\end_layout

\end_inset

 imposes an invocation limit of 2^32 where the cipherstate is randomly generated
 or is a length other than 96 bits.) 
\end_layout

\begin_layout Standard
The reordering of plaintext and associated data for GSS_C_DCE_STYLE interoperabi
lity may be problematic where the plaintext and associated data lengths
 are variable.
\end_layout

\begin_layout Section
Acknowledgements
\end_layout

\begin_layout Standard
The author would like to thank the following individuals for their comments
 and suggestions: Nicolas Williams and Greg Hudson.
\end_layout

\begin_layout Section
Normative References
\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "RFC2119"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "RFC2743"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "RFC4121"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4121.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "RFC4537"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4537.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex EmbeddedBibXML
status open

\begin_layout Plain Layout
<reference anchor="KRB-AEAD"><front><title>AEAD Encryption Types for Kerberos
 5</title> <author initials="L." surname="Howard" fullname="Luke Howard">
 <organization>PADL Software</organization></author><date month="December"
 year="2015"/> <abstract><t>This document updates [RFC3961] to support encryptio
n mechanisms that can authenticate associated data, such as Counter with
 CBC-MAC (CCM) and Galois/Counter Mode (GCM).
 These mechanisms are often more performant and need not expand the message
 as much as conventional modes.</t></abstract></front><seriesInfo name="Internet-
Draft" value="draft-howard-krb-aead-00"/><format type="TXT" target="https://www.i
etf.org/id/draft-howard-krb-aead-00.txt"/></reference>
\end_layout

\end_inset


\end_layout

\begin_layout Section
Informative References
\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "RFC3961"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3961.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "RFC5116"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5116.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex EmbeddedBibXML
status open

\begin_layout Plain Layout
<reference anchor="CCM"><front><title>Recommendation for Block Cipher Modes
 of Operation: The CCM Mode for Authentication and Confidentiality</title><autho
r initials="M." surname="Dworkin" fullname="Morris Dworkin"><organization>Nationa
l Institute of Standards and Technology</organization></author><date year="2004"
 month="May"/></front><format type="HTML" target="http://csrc.nist.gov/publication
s/nistpubs/800-38C/SP-800-38C.pdf"/></reference>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex EmbeddedBibXML
status open

\begin_layout Plain Layout
<reference anchor="GCM"><front><title>Recommendation for Block Cipher Modes
 of Operation: Galois/Counter Mode (GCM) and GMAC</title><author initials="M."
 surname="Dworkin" fullname="Morris Dworkin"><organization>National Institute
 of Standards and Technology</organization></author><date year="2007" month="Nov
ember"/></front><format type="HTML" target="http://csrc.nist.gov/publications/nist
pubs/800-38D/SP-800-38D.pdf"/></reference>
\end_layout

\end_inset


\end_layout

\end_body
\end_document
